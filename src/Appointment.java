
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author usr
 */
public class Appointment extends javax.swing.JFrame {

    DefaultTableModel mymodel;
    FileReader filename;

    /**
     * Creates new form Appointment
     */
    public Appointment() {
        initComponents();
    }

    private void filter(String query) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(mymodel);
        Vlist.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(query));
    }

    private boolean checkEmpty() {
        if (txtID.getText().equals("") || txtPhone.getText().equals("") || txtEmail.getText().equals("") || txtAddress.getText().equals("") || ((JTextField) AppDate.getDateEditor().getUiComponent()).getText().equals("") || txtVaccine.getText().equals("") || txtVaccen.getText().equals("")) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblAppointment = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        appdate = new javax.swing.JLabel();
        AppDate = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        Vlist = new javax.swing.JTable();
        vaccine = new javax.swing.JLabel();
        txtVaccine = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        vaccen = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        ID = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        phone = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        txtVaccen = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        address = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Appointment");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 0, 102));

        lblAppointment.setFont(new java.awt.Font("Comic Sans MS", 1, 28)); // NOI18N
        lblAppointment.setForeground(new java.awt.Color(255, 255, 255));
        lblAppointment.setText("Appointment");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(308, 308, 308)
                .addComponent(lblAppointment)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAppointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        appdate.setText("Appointment Date:");

        Vlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Phone", "Email", "Address", "Appointment Date", "Vaccine Type", "Vaccination Center"
            }
        ));
        Vlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VlistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Vlist);

        vaccine.setText("Vaccine Type:");

        txtVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVaccineActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        vaccen.setText("Vaccination Center:");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        ID.setText("User ID:");

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        phone.setText("Phone:");

        email.setText("Email:");

        txtVaccen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVaccenActionPerformed(evt);
            }
        });

        address.setText("Address:");

        lblID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblID.setText("ID:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(ID)
                                        .addComponent(phone)
                                        .addComponent(email)
                                        .addComponent(address)
                                        .addComponent(appdate)
                                        .addComponent(vaccine)
                                        .addComponent(vaccen))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtID)
                                        .addComponent(txtPhone)
                                        .addComponent(txtEmail)
                                        .addComponent(txtAddress)
                                        .addComponent(txtVaccine)
                                        .addComponent(txtVaccen)
                                        .addComponent(AppDate, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblID))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ID)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phone)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(email)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(address)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(appdate)
                            .addComponent(AppDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vaccine)
                            .addComponent(txtVaccine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vaccen)
                            .addComponent(txtVaccen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addGap(18, 18, 18)
                        .addComponent(btnClear)))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        Main m = new Main();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String query = txtSearch.getText();
        filter(query);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void VlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VlistMouseClicked
        // TODO add your handling code here:
        txtID.setEditable(false);

        int rows[] = this.Vlist.getSelectedRows();

        for (int i = 0; i < rows.length; i++) {
            txtID.setText(Vlist.getValueAt(rows[i], 0).toString());
            txtPhone.setText(Vlist.getValueAt(rows[i], 1).toString());
            txtEmail.setText(Vlist.getValueAt(rows[i], 2).toString());
            txtAddress.setText(Vlist.getValueAt(rows[i], 3).toString());
            ((JTextField) AppDate.getDateEditor().getUiComponent()).setText(Vlist.getValueAt(rows[i], 4).toString());
            txtVaccine.setText(Vlist.getValueAt(rows[i], 5).toString());
            txtVaccen.setText(Vlist.getValueAt(rows[i], 6).toString());
        }
    }//GEN-LAST:event_VlistMouseClicked

    private void txtVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVaccineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVaccineActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String User = txtID.getText();
        String Phone = txtPhone.getText();
        String Email = txtEmail.getText();
        String Address = txtAddress.getText();
        String Appdate = ((JTextField) AppDate.getDateEditor().getUiComponent()).getText();
        String Vaccine = txtVaccine.getText();
        String Vaccen = txtVaccen.getText();

        ArrayList<String> tempArray = new ArrayList<>();
        if (checkEmpty() == true) {
            JOptionPane.showMessageDialog(rootPane, "Please complete all fields", "Incomplete Fields", JOptionPane.ERROR_MESSAGE);
            txtID.requestFocus(true);
            return;
        } else {
            try {
                try ( FileReader fr = new FileReader("Appointment.txt")) {
                    Scanner reader = new Scanner(fr);
                    String line;
                    String[] lineArr;

                    while ((line = reader.nextLine()) != null) {
                        lineArr = line.split("/");
                        if (lineArr[0].equals(User)) {
                            tempArray.add(
                                    lineArr[0] + "/"
                                    + Phone + "/"
                                    + Email + "/"
                                    + Address + "/"
                                    + Appdate + "/"
                                    + Vaccine + "/"
                                    + Vaccen);
                        } else {
                            tempArray.add(line);

                        }
                    }

                    fr.close();

                } catch (Exception e) {
                }
            } catch (Exception e) {
            }

            try {
                try ( PrintWriter pr = new PrintWriter("Appointment.txt")) {

                    for (String str : tempArray) {
                        pr.println(str);
                    }
                    pr.close();
                    JOptionPane.showMessageDialog(rootPane, "Update Successful", "Update Successful", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                }
            } catch (Exception e) {
            }
        }

        //clear the input after register
        txtEmail.setText("");
        txtID.setText("");
        txtPhone.setText("");
        txtAddress.setText("");
        ((JTextField) AppDate.getDateEditor().getUiComponent()).setText("");
        txtVaccine.setText("");
        txtVaccen.setText("");

        txtID.requestFocus();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int dialogButton = JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING", JOptionPane.YES_NO_OPTION);
        if (dialogButton == JOptionPane.YES_OPTION) {
            String Username = txtID.getText();

            ArrayList<String> tempArray = new ArrayList<>();
            if (checkEmpty() == true) {
                JOptionPane.showMessageDialog(rootPane, "Please complete all fields", "Incomplete Fields", JOptionPane.ERROR_MESSAGE);
                txtID.requestFocus(true);
                return;
            } else {
                try {
                    try ( FileReader fr = new FileReader("Appointment.txt")) {
                        Scanner sc = new Scanner(fr);
                        String line;
                        String[] lineArr;

                        while ((line = sc.nextLine()) != null) {
                            lineArr = line.split("/");
                            if (!lineArr[0].equals(Username)) {
                                tempArray.add(line);
                            }
                        }
                        fr.close();
                    } catch (Exception e) {
                    }
                } catch (Exception e) {
                }
                try {
                    try ( PrintWriter pr = new PrintWriter("Appointment.txt")) {
                        for (String str : tempArray) {
                            pr.println(str);
                        }
                        pr.close();
                        JOptionPane.showMessageDialog(rootPane, "Deleted Succesfully");
                    } catch (Exception e) {
                    }
                } catch (Exception e) {
                }
            }

            //clear the input after register
            txtID.setText("");
            txtPhone.setText("");
            txtEmail.setText("");
            txtAddress.setText("");
            ((JTextField) AppDate.getDateEditor().getUiComponent()).setText("");
            txtVaccine.setText("");
            txtVaccen.setText("");

            txtID.requestFocus();
        } else {
            remove(dialogButton);
        }


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtID.setText("");
        txtPhone.setText("");
        txtEmail.setText("");
        txtAddress.setText("");
        ((JTextField) AppDate.getDateEditor().getUiComponent()).setText("");
        txtVaccine.setText("");
        txtVaccen.setText("");

        txtID.requestFocus();
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtVaccenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVaccenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVaccenActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        try {
            filename = new FileReader("Appointment.txt");
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "No file found", "Error Loading File", JOptionPane.ERROR);

        }

        String[] columnNames = {"User ID", "Phone", "Email", "Address", "Appointment Date", "Vaccine", "Vaccination Center"};
        mymodel = (DefaultTableModel) Vlist.getModel();
        mymodel.setColumnIdentifiers(columnNames); //display columnnames on jtable

        mymodel.setRowCount(0);
        Vlist.revalidate();

        //read the files after loading 
        BufferedReader br = new BufferedReader(filename);
        Object records[] = br.lines().toArray(); //store each line into array
        //loop through the array to
        for (int index = 0; index < records.length; index++) {
            String eachline = records[index].toString();
            String[] row = eachline.split("/");

            mymodel.addRow(row);
        }
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Appointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser AppDate;
    private javax.swing.JLabel ID;
    private javax.swing.JTable Vlist;
    private javax.swing.JLabel address;
    private javax.swing.JLabel appdate;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel email;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAppointment;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel phone;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtVaccen;
    private javax.swing.JTextField txtVaccine;
    private javax.swing.JLabel vaccen;
    private javax.swing.JLabel vaccine;
    // End of variables declaration//GEN-END:variables
}
