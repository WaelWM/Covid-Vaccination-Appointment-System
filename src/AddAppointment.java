
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author usr
 */
public class AddAppointment extends javax.swing.JFrame {

    DefaultTableModel mymodel;
    FileReader filename;

    /**
     * Creates new form AddAppointment
     */
    public AddAppointment() {
        initComponents();
    }

    private boolean checkEmpty() {
        if (txtID.getText().equals("") || txtPhone.getText().equals("") || txtEmail.getText().equals("") || txtAddress.getText().equals("") || ((JTextField) Appdate.getDateEditor().getUiComponent()).getText().equals("") || txtVaccine.getText().equals("") || txtVaccen.getText().equals("") || txtVacID.getText().equals("") || txtStock.getText().equals("")) {
            return true;
        } else {
            return false;
        }
    }

    private void filter(String query) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(mymodel);
        tblVaccine.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(query));

    }

    private void minusQty() {
        String id = txtVacID.getText();

        ArrayList<String> tempArray = new ArrayList<>();
        try ( FileReader fr = new FileReader("View.txt")) {
            Scanner reader = new Scanner(fr);
            String line;
            String[] lineArr;

            while ((line = reader.nextLine()) != null) {
                lineArr = line.split(",");

                if (lineArr[0].equals(id)) {
                    int tempqty = Integer.parseInt(lineArr[3]);
                    tempqty -= 1;
                    tempArray.add(
                            lineArr[0] + "," + lineArr[1] + "," + lineArr[2] + "," + tempqty);

                } else {
                    tempArray.add(line);

                }
            }
            fr.close();
        } catch (Exception e) {
            try ( PrintWriter pr = new PrintWriter("View.txt")) {
                for (String str : tempArray) {
                    pr.println(str);
                }
                pr.close();
            } catch (Exception ex) {

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        vaccine = new javax.swing.JLabel();
        txtVaccine = new javax.swing.JTextField();
        Appdate = new com.toedter.calendar.JDateChooser();
        vaccen = new javax.swing.JLabel();
        vaccen1 = new javax.swing.JLabel();
        ID = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        VacID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtVacID = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        email = new javax.swing.JLabel();
        txtVaccen = new javax.swing.JTextField();
        phone = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        txtAddress = new javax.swing.JTextField();
        appdate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVaccine = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lblAddApppointment = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add Appointment");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        vaccine.setText("Vaccine Type:");

        txtVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVaccineActionPerformed(evt);
            }
        });

        vaccen.setText("Vaccination Center:");

        vaccen1.setText("Stock:");

        ID.setText("User ID:");

        txtStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStockActionPerformed(evt);
            }
        });

        VacID.setText("Vaccine ID:");

        txtVacID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVacIDActionPerformed(evt);
            }
        });

        email.setText("Email:");

        txtVaccen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVaccenActionPerformed(evt);
            }
        });

        phone.setText("Phone:");

        address.setText("Address:");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        appdate.setText("Appointment Date:");

        tblVaccine.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tblVaccine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine ID", "Vaccine Name", "Vaccination Center", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVaccine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVaccineMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblVaccine);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Search:");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ID)
                            .addComponent(phone)
                            .addComponent(email)
                            .addComponent(address)
                            .addComponent(appdate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtID)
                            .addComponent(txtPhone)
                            .addComponent(txtEmail)
                            .addComponent(txtAddress)
                            .addComponent(Appdate, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(vaccine)
                                .addComponent(vaccen)
                                .addComponent(vaccen1)
                                .addComponent(VacID))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtVaccine)
                                .addComponent(txtVaccen)
                                .addComponent(txtStock)
                                .addComponent(txtVacID, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(121, 121, 121)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(76, 76, 76)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ID)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phone)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(email)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(address)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(appdate)
                            .addComponent(Appdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(VacID)
                            .addComponent(txtVacID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vaccine)
                            .addComponent(txtVaccine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vaccen)
                            .addComponent(txtVaccen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vaccen1)
                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addComponent(btnAdd))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );

        jPanel1.setBackground(new java.awt.Color(51, 0, 102));

        lblAddApppointment.setFont(new java.awt.Font("Comic Sans MS", 1, 28)); // NOI18N
        lblAddApppointment.setForeground(new java.awt.Color(255, 255, 255));
        lblAddApppointment.setText("Add Appointment Form");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAddApppointment)
                .addGap(327, 327, 327))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAddApppointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVaccineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVaccineActionPerformed

    private void txtStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStockActionPerformed

    private void txtVacIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVacIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVacIDActionPerformed

    private void txtVaccenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVaccenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVaccenActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            BufferedReader br = new BufferedReader(new FileReader("Appointment.txt"));
            String s3 = "";
            ArrayList<String> userid = new ArrayList<String>();

            while ((s3 = br.readLine()) != null) {
                String data2[] = new String[6];
                data2 = s3.split("/");
                userid.add(data2[0]);
            }

            String temp = txtID.getText();
            for (int i = 0; i < userid.size(); i++) {
                if (temp.equals(userid.get(i))) {
                    JOptionPane.showMessageDialog(rootPane, "User have booked the appointment!", "Appointment Existed", JOptionPane.ERROR_MESSAGE);
                    ((JTextField) Appdate.getDateEditor().getUiComponent()).setText("");
                    txtVacID.setText("");
                    txtVaccine.setText("");
                    txtVaccen.setText("");
                    txtStock.setText("");
                    break;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }

        FileWriter file = null;
        if (checkEmpty() == true) {
            JOptionPane.showMessageDialog(rootPane, "Please complete all fields", "Incomplete Fields", JOptionPane.ERROR_MESSAGE);
            txtID.requestFocus(true);
            return;
        } else {
            if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", txtEmail.getText()))) {
                JOptionPane.showMessageDialog(rootPane, "Enter a valid email", "Error", JOptionPane.ERROR_MESSAGE);
                txtID.requestFocus(true);
            } else {
                if (!(Pattern.matches("\\d{3}-\\d{7}", txtPhone.getText()))) {
                    JOptionPane.showMessageDialog(rootPane, "Phone Number format must be xxx-xxxxxxx", "Error", JOptionPane.ERROR_MESSAGE);
                    txtPhone.requestFocus(true);
                } else {
                    try {
                        Appoint a = new Appoint(txtID.getText(), txtPhone.getText(), txtEmail.getText(), txtAddress.getText(), ((JTextField) Appdate.getDateEditor().getUiComponent()).getText(), txtVaccine.getText(), txtVaccen.getText());
                        file = new FileWriter("Appointment.txt", true);
                        PrintWriter pw = new PrintWriter(file);
                        pw.print(a.gettxtID() + "/");
                        pw.print(a.gettxtPhone() + "/");
                        pw.print(a.gettxtEmail() + "/");
                        pw.print(a.gettxtAddress() + "/");
                        pw.print(a.gettxtAppdate() + "/");
                        pw.print(a.gettxtVaccine() + "/");
                        pw.println(a.gettxtVaccen());
                        minusQty();
                        file.close();
                        pw.close();
                        JOptionPane.showMessageDialog(rootPane, "Add Successful", "Add Successful", JOptionPane.INFORMATION_MESSAGE);
                        this.dispose();
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(rootPane, ex.toString());
                    }

                    txtID.setText("");
                    txtPhone.setText("");
                    txtEmail.setText("");
                    txtAddress.setText("");
                    ((JTextField) Appdate.getDateEditor().getUiComponent()).setText("");
                    txtVacID.setText("");
                    txtVaccine.setText("");
                    txtVaccen.setText("");
                    txtStock.setText("");

                }
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void tblVaccineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVaccineMouseClicked
        // TODO add your handling code here:
        int rows[] = this.tblVaccine.getSelectedRows();

        for (int i = 0; i < rows.length; i++) {
            txtVacID.setText(tblVaccine.getValueAt(rows[i], 0).toString());
            txtVaccine.setText(tblVaccine.getValueAt(rows[i], 1).toString());
            txtVaccen.setText(tblVaccine.getValueAt(rows[i], 2).toString());
            txtStock.setText(tblVaccine.getValueAt(rows[i], 3).toString());
        }

        if (txtStock.getText().equals("0")) {
            JOptionPane.showMessageDialog(rootPane, "No stock available, please choose another vaccine!", "Error", JOptionPane.ERROR_MESSAGE);
            txtVacID.setText("");
            txtVaccine.setText("");
            txtVaccen.setText("");
            txtStock.setText("");
        }

        txtVacID.setEditable(false);
        txtVaccine.setEditable(false);
        txtVaccen.setEditable(false);
        txtStock.setEditable(false);
    }//GEN-LAST:event_tblVaccineMouseClicked

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();

    }//GEN-LAST:event_btnBackActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        try {
            filename = new FileReader("View.txt");
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "No file found", "Error Loading File", JOptionPane.ERROR);

        }

        //fill table with column name
        String[] columnNames = {"Vaccine ID", "Vaccine Name", "Vaccination Center", "Stock"};
        mymodel = (DefaultTableModel) tblVaccine.getModel();
        mymodel.setColumnIdentifiers(columnNames); //display columnnames on jtable

        mymodel.setRowCount(0);
        tblVaccine.revalidate();

        //read the files after loading 
        BufferedReader br = new BufferedReader(filename);
        Object records[] = br.lines().toArray(); //store each line into array
        //loop through the array to
        for (int index = 0; index < records.length; index++) {
            String eachline = records[index].toString();
            String[] row = eachline.split(",");
            mymodel.addRow(row);
        }
    }//GEN-LAST:event_formWindowActivated

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String query = txtSearch.getText();
        filter(query);
    }//GEN-LAST:event_txtSearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Appdate;
    private javax.swing.JLabel ID;
    private javax.swing.JLabel VacID;
    private javax.swing.JLabel address;
    private javax.swing.JLabel appdate;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel email;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddApppointment;
    private javax.swing.JLabel phone;
    private javax.swing.JTable tblVaccine;
    public javax.swing.JTextField txtAddress;
    public javax.swing.JTextField txtEmail;
    public javax.swing.JTextField txtID;
    public javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtVacID;
    private javax.swing.JTextField txtVaccen;
    private javax.swing.JTextField txtVaccine;
    private javax.swing.JLabel vaccen;
    private javax.swing.JLabel vaccen1;
    private javax.swing.JLabel vaccine;
    // End of variables declaration//GEN-END:variables
}
