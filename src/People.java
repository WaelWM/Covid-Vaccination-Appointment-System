
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author usr
 */
public class People extends javax.swing.JFrame {
    
    DefaultTableModel mymodel;
    FileReader filename;

    /**
     * Creates new form People
     */
    public People() {
        initComponents();
        displayDate();
        displayTime();
    }
    
    AddAppointment a = new AddAppointment();
    
    private boolean checkEmpty() {
        if (txtFirst.getText().equals("") || txtLast.getText().equals("") || txtID.getText().equals("") || txtPass.getText().equals("") || txtPhone.getText().equals("") || txtEmail.getText().equals("") || txtAddress.getText().equals("") || ((JTextField) Birthdate.getDateEditor().getUiComponent()).getText().equals("") || txtIC.getText().equals("") || txtCitizen.getText().equals("")) {
            return true;
        } else {
            return false;
        }
    }
    
    private void filter(String query) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(mymodel);
        Vlist.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(query));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txtID = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        lblUserID = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        txtPass = new javax.swing.JTextField();
        txtCitizen = new javax.swing.JTextField();
        lblPass = new javax.swing.JLabel();
        lblEmail1 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        txtPhone = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        lblEmail3 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        txtIC = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        lblPhone = new javax.swing.JLabel();
        Birthdate = new com.toedter.calendar.JDateChooser();
        txtEmail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Vlist = new javax.swing.JTable();
        lblEmail2 = new javax.swing.JLabel();
        lblFirst = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblLast = new javax.swing.JLabel();
        btnAppointment = new javax.swing.JButton();
        txtFirst = new javax.swing.JTextField();
        txtLast = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lblDate = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        lblPeople = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("People");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        lblAddress.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblAddress.setText("Address:");

        lblUserID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblUserID.setText("User ID:");

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane2.setViewportView(txtAddress);

        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });

        txtCitizen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCitizenActionPerformed(evt);
            }
        });

        lblPass.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblPass.setText("Password:");

        lblEmail1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblEmail1.setText("Birth Date:");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblEmail3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblEmail3.setText("IC/Passport ID:");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtICActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblPhone.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblPhone.setText("Phone:");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        Vlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "First Name", "Last Name", "Password", "Phone", "Email", "Birth Date", "Nationality", "IC/Passport", "Address"
            }
        ));
        Vlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VlistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Vlist);

        lblEmail2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblEmail2.setText("Citizen/Non-citizen:");

        lblFirst.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFirst.setText("First Name:");

        lblEmail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblEmail.setText("Email:");

        lblLast.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblLast.setText("Last Name:");

        btnAppointment.setText("Add Appointment");
        btnAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAppointmentActionPerformed(evt);
            }
        });

        txtFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstActionPerformed(evt);
            }
        });

        txtLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("ID:");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(41, 41, 41)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 859, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblFirst)
                                        .addComponent(lblEmail3)
                                        .addComponent(lblAddress)
                                        .addComponent(lblPass)
                                        .addComponent(lblPhone)
                                        .addComponent(lblEmail2)
                                        .addComponent(lblEmail)
                                        .addComponent(lblLast)
                                        .addComponent(lblEmail1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(lblUserID)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIC, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCitizen, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(86, 86, 86))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserID)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFirst)
                            .addComponent(txtFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLast)
                            .addComponent(txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPass)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhone)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmail1)
                            .addComponent(Birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail2)
                            .addComponent(txtCitizen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail3)
                            .addComponent(txtIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnClear))
                .addGap(18, 18, 18)
                .addComponent(btnAppointment)
                .addGap(32, 32, 32))
        );

        jPanel1.setBackground(new java.awt.Color(51, 0, 102));

        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setText("jLabel2");

        lblTime.setForeground(new java.awt.Color(255, 255, 255));
        lblTime.setText("jLabel3");

        lblPeople.setFont(new java.awt.Font("Comic Sans MS", 1, 28)); // NOI18N
        lblPeople.setForeground(new java.awt.Color(255, 255, 255));
        lblPeople.setText("People");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPeople)
                .addGap(457, 457, 457)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTime)
                    .addComponent(lblDate))
                .addGap(73, 73, 73))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblDate)
                        .addGap(18, 18, 18)
                        .addComponent(lblTime))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnBack, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblPeople, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void txtCitizenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCitizenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCitizenActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        try {
            BufferedReader br = new BufferedReader(new FileReader("User.txt"));
            String s3 = "";
            ArrayList<String> userid = new ArrayList<String>();
            
            while ((s3 = br.readLine()) != null) {
                String data2[] = new String[10];
                data2 = s3.split("/");
                userid.add(data2[0]);
            }
            
            String temp = txtID.getText();
            for (int i = 0; i < userid.size(); i++) {
                if (temp.equals(userid.get(i))) {
                    JOptionPane.showMessageDialog(rootPane, "User ID existed, please insert another ID!", "User ID Error", JOptionPane.ERROR_MESSAGE);
                    txtFirst.setText("");
                    txtLast.setText("");
                    txtID.setText("");
                    txtPass.setText("");
                    txtPhone.setText("");
                    txtEmail.setText("");
                    ((JTextField) Birthdate.getDateEditor().getUiComponent()).setText("");
                    txtCitizen.setText("");
                    txtIC.setText("");
                    txtAddress.setText("");
                    
                    txtID.requestFocus();
                    break;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
        
        FileWriter file = null;
        if (checkEmpty() == true) {
            JOptionPane.showMessageDialog(rootPane, "Please complete all fields", "Incomplete Fields", JOptionPane.ERROR_MESSAGE);
            txtFirst.requestFocus(true);
            return;
        } else {
            if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", txtEmail.getText()))) {
                JOptionPane.showMessageDialog(rootPane, "Enter a valid email", "Error", JOptionPane.ERROR_MESSAGE);
                txtEmail.requestFocus(true);
            } else {
                if (!(Pattern.matches("\\d{3}-\\d{7}", txtPhone.getText()))) {
                    JOptionPane.showMessageDialog(rootPane, "Phone Number format must be xxx-xxxxxxx", "Error", JOptionPane.ERROR_MESSAGE);
                    txtPhone.requestFocus(true);
                } else {
                    try {
                        User u = new User(txtID.getText(), txtFirst.getText(), txtLast.getText(), txtPass.getText(), txtPhone.getText(), txtEmail.getText(), ((JTextField) Birthdate.getDateEditor().getUiComponent()).getText(), txtCitizen.getText(), txtIC.getText(), txtAddress.getText());
                        file = new FileWriter("User.txt", true);
                        PrintWriter pw = new PrintWriter(file);
                        pw.print(u.gettxtUserID() + "/");
                        pw.print(u.gettxtFirst() + "/");
                        pw.print(u.gettxtLast() + "/");
                        pw.print(u.gettxtPass() + "/");
                        pw.print(u.gettxtPhone() + "/");
                        pw.print(u.gettxtEmail() + "/");
                        pw.print(u.getBirthdate() + "/");
                        pw.print(u.getCitizen() + "/");
                        pw.print(u.gettxtIC() + "/");
                        pw.println(u.gettxtAddress());
                        file.close();
                        pw.close();
                        JOptionPane.showMessageDialog(rootPane, "Add Successful", "Add Successful", JOptionPane.INFORMATION_MESSAGE);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(rootPane, ex.toString());
                    }
                    
                    txtFirst.setText("");
                    txtLast.setText("");
                    txtID.setText("");
                    txtPass.setText("");
                    txtPhone.setText("");
                    txtEmail.setText("");
                    ((JTextField) Birthdate.getDateEditor().getUiComponent()).setText("");
                    txtCitizen.setText("");
                    txtIC.setText("");
                    txtAddress.setText("");
                    
                    txtID.requestFocus();
                }
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        String User = txtID.getText();
        String First = txtFirst.getText();
        String Last = txtLast.getText();
        String Password = txtPass.getText();
        String Phone = txtPhone.getText();
        String Email = txtEmail.getText();
        String Date = ((JTextField) Birthdate.getDateEditor().getUiComponent()).getText();
        String Nationality = txtCitizen.getText();
        String IC = txtIC.getText();
        String Address = txtAddress.getText();
        
        ArrayList<String> tempArray = new ArrayList<>();
        if (checkEmpty() == true) {
            JOptionPane.showMessageDialog(rootPane, "Please complete all fields", "Incomplete Fields", JOptionPane.ERROR_MESSAGE);
            txtID.requestFocus(true);
            return;
        } else {
            try {
                try ( FileReader fr = new FileReader("User.txt")) {
                    Scanner reader = new Scanner(fr);
                    String line;
                    String[] lineArr;
                    
                    while ((line = reader.nextLine()) != null) {
                        lineArr = line.split("/");
                        if (lineArr[0].equals(User)) {
                            tempArray.add(
                                    lineArr[0] + "/"
                                    + First + "/"
                                    + Last + "/"
                                    + Password + "/"
                                    + Phone + "/"
                                    + Email + "/"
                                    + Date + "/"
                                    + Nationality + "/"
                                    + IC + "/"
                                    + Address);
                            
                            txtID.setEditable(true);
                        } else {
                            tempArray.add(line);
                            
                        }
                    }
                    
                    fr.close();
                    
                } catch (Exception e) {
                }
            } catch (Exception e) {
            }
            
            try {
                try ( PrintWriter pr = new PrintWriter("User.txt")) {
                    
                    for (String str : tempArray) {
                        pr.println(str);
                    }
                    pr.close();
                    JOptionPane.showMessageDialog(rootPane, "Update Successful", "Update Successful", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                }
            } catch (Exception e) {
            }
        }

        //clear the input after register
        txtID.setText("");
        txtFirst.setText("");
        txtLast.setText("");
        txtPass.setText("");
        txtPhone.setText("");
        txtEmail.setText("");
        ((JTextField) Birthdate.getDateEditor().getUiComponent()).setText("");
        txtCitizen.setText("");
        txtIC.setText("");
        txtAddress.setText("");
        
        txtID.requestFocus();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int dialogButton = JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING", JOptionPane.YES_NO_OPTION);
        if (dialogButton == JOptionPane.YES_OPTION) {
            String Username = txtID.getText();
            
            ArrayList<String> tempArray = new ArrayList<>();
            if (checkEmpty() == true) {
                JOptionPane.showMessageDialog(rootPane, "Please complete all fields", "Incomplete Fields", JOptionPane.ERROR_MESSAGE);
                txtID.requestFocus(true);
                return;
            } else {
                try {
                    try ( FileReader fr = new FileReader("User.txt")) {
                        Scanner sc = new Scanner(fr);
                        String line;
                        String[] lineArr;
                        
                        while ((line = sc.nextLine()) != null) {
                            lineArr = line.split("/");
                            if (!lineArr[0].equals(Username)) {
                                tempArray.add(line);
                            }
                        }
                        fr.close();
                    } catch (Exception e) {
                    }
                } catch (Exception e) {
                }
                try {
                    try ( PrintWriter pr = new PrintWriter("User.txt")) {
                        for (String str : tempArray) {
                            pr.println(str);
                        }
                        pr.close();
                        JOptionPane.showMessageDialog(rootPane, "Deleted Succesfully");
                    } catch (Exception e) {
                    }
                } catch (Exception e) {
                }
            }

            //clear the input after register
            txtFirst.setText("");
            txtLast.setText("");
            txtID.setText("");
            txtPass.setText("");
            txtPhone.setText("");
            txtEmail.setText("");
            ((JTextField) Birthdate.getDateEditor().getUiComponent()).setText("");
            txtCitizen.setText("");
            txtIC.setText("");
            txtAddress.setText("");
            
            txtID.requestFocus();
        } else {
            remove(dialogButton);
        }
        

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtICActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtICActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtFirst.setText("");
        txtLast.setText("");
        txtID.setText("");
        txtPass.setText("");
        txtPhone.setText("");
        txtEmail.setText("");
        ((JTextField) Birthdate.getDateEditor().getUiComponent()).setText("");
        txtCitizen.setText("");
        txtIC.setText("");
        txtAddress.setText("");
        
        txtID.requestFocus();
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void VlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VlistMouseClicked
        // TODO add your handling code here:
        txtID.setEditable(false);
        
        int rows[] = this.Vlist.getSelectedRows();
        
        for (int i = 0; i < rows.length; i++) {
            txtID.setText(Vlist.getValueAt(rows[i], 0).toString());
            txtFirst.setText(Vlist.getValueAt(rows[i], 1).toString());
            txtLast.setText(Vlist.getValueAt(rows[i], 2).toString());
            txtPass.setText(Vlist.getValueAt(rows[i], 3).toString());
            txtPhone.setText(Vlist.getValueAt(rows[i], 4).toString());
            txtEmail.setText(Vlist.getValueAt(rows[i], 5).toString());
            ((JTextField) Birthdate.getDateEditor().getUiComponent()).setText(Vlist.getValueAt(rows[i], 6).toString());
            txtCitizen.setText(Vlist.getValueAt(rows[i], 7).toString());
            txtIC.setText(Vlist.getValueAt(rows[i], 8).toString());
            txtAddress.setText(Vlist.getValueAt(rows[i], 9).toString());
        }
    }//GEN-LAST:event_VlistMouseClicked

    private void btnAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAppointmentActionPerformed
        // TODO add your handling code here:
        if (checkEmpty() == true) {
            JOptionPane.showMessageDialog(rootPane, "Please select people to book appointment.", "Incomplete Fields", JOptionPane.ERROR_MESSAGE);
            txtID.requestFocus(true);
            return;
        } else {
            int index = Vlist.getSelectedRow();
            TableModel model = Vlist.getModel();
            String ID = model.getValueAt(index, 0).toString();
            String Phone = model.getValueAt(index, 4).toString();
            String Email = model.getValueAt(index, 5).toString();
            String Address = model.getValueAt(index, 9).toString();
            
            a.setVisible(true);
            a.pack();
            a.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            
            a.txtID.setText(ID);
            a.txtPhone.setText(Phone);
            a.txtEmail.setText(Email);
            a.txtAddress.setText(Address);
            
            a.txtID.setEditable(false);
            a.txtPhone.setEditable(false);
            a.txtEmail.setEditable(false);
            a.txtAddress.setEditable(false);
        }
    }//GEN-LAST:event_btnAppointmentActionPerformed

    private void txtFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstActionPerformed

    private void txtLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String query = txtSearch.getText();
        filter(query);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        Main m = new Main();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        txtAddress.setLineWrap(true);
        
        try {
            filename = new FileReader("User.txt");
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "No file found", "Error Loading File", JOptionPane.ERROR);
            
        }
        
        String[] columnNames = {"User ID", "First Name", "Last Name", "Password", "Phone", "Email", "Birth Date", "Nationality", "IC/Passport", "Address"};
        mymodel = (DefaultTableModel) Vlist.getModel();
        mymodel.setColumnIdentifiers(columnNames); //display columnnames on jtable

        mymodel.setRowCount(0);
        Vlist.revalidate();

        //read the files after loading 
        BufferedReader br = new BufferedReader(filename);
        Object records[] = br.lines().toArray(); //store each line into array
        //loop through the array to
        for (int index = 0; index < records.length; index++) {
            String eachline = records[index].toString();
            String[] row = eachline.split("/");
            
            mymodel.addRow(row);
        }
    }//GEN-LAST:event_formWindowActivated
    
    public void displayDate() {
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
        lblDate.setText("Date :" + sdf.format(date));
        
    }
    
    public void displayTime() {
        
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date date = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ssa");
                lblTime.setText("Time :" + sdf.format(date) + "");
            }
        }).start();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(People.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(People.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(People.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(People.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new People().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Birthdate;
    private javax.swing.JTable Vlist;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAppointment;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmail1;
    private javax.swing.JLabel lblEmail2;
    private javax.swing.JLabel lblEmail3;
    private javax.swing.JLabel lblFirst;
    private javax.swing.JLabel lblLast;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblPeople;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblUserID;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtCitizen;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirst;
    private javax.swing.JTextField txtIC;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtLast;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
