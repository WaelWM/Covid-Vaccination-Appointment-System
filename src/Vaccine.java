
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author usr
 */
public class Vaccine extends javax.swing.JFrame {

    DefaultTableModel mymodel;
    FileReader filename;

    /**
     * Creates new form Vaccine
     */
    public Vaccine() {
        initComponents();
    }

    public boolean checkEmpty() {
        if (txtVaccineID.getText().equals("") || txtStock.getText().equals("")) {
            return true;
        } else {
            return false;
        }
    }

    private void filter(String query) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(mymodel);
        tblVaccine.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(query));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblVaccineName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVaccine = new javax.swing.JTable();
        lblStock = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblVaccinationCenter = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        lblVaccineID = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        txtVaccineID = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        cbxVaccineName = new javax.swing.JComboBox<>();
        cbxVaccinationCenter = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vaccine");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 0, 102));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Vaccine & Vaccination Center Management");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(379, 379, 379))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        lblVaccineName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblVaccineName.setText("Vaccine Name:");

        tblVaccine.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tblVaccine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine ID", "Vaccine Name", "Vaccination Center", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVaccine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVaccineMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblVaccine);

        lblStock.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblStock.setText("Stock: ");

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblVaccinationCenter.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblVaccinationCenter.setText("Vaccination Center: ");

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        lblVaccineID.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblVaccineID.setText("Vaccine ID:");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        txtVaccineID.setEditable(true);
        txtVaccineID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblSearch.setText("Search Vaccine Name/Vaccination Center:");

        txtStock.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbxVaccineName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbxVaccineName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        cbxVaccineName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxVaccineNameActionPerformed(evt);
            }
        });

        cbxVaccinationCenter.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbxVaccinationCenter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        cbxVaccinationCenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxVaccinationCenterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblVaccinationCenter, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblVaccineName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblVaccineID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStock, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbxVaccinationCenter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtStock)
                            .addComponent(cbxVaccineName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtVaccineID, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 863, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVaccineID)
                            .addComponent(txtVaccineID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVaccineName)
                            .addComponent(cbxVaccineName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVaccinationCenter)
                            .addComponent(cbxVaccinationCenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStock)
                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClear)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete)
                            .addComponent(btnCreate))))
                .addGap(0, 41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        Main m = new Main();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void tblVaccineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVaccineMouseClicked
        // TODO add your handling code here:
        int rows[] = this.tblVaccine.getSelectedRows();

        for (int i = 0; i < rows.length; i++) {
            txtVaccineID.setText(tblVaccine.getValueAt(rows[i], 0).toString());
            cbxVaccineName.setSelectedItem(tblVaccine.getValueAt(rows[i], 1).toString());
            cbxVaccinationCenter.setSelectedItem(tblVaccine.getValueAt(rows[i], 2).toString());
            txtStock.setText(tblVaccine.getValueAt(rows[i], 3).toString());
        }
    }//GEN-LAST:event_tblVaccineMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtVaccineID.setText("");
        cbxVaccineName.setSelectedItem(0);
        cbxVaccinationCenter.setSelectedItem(0);
        txtStock.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int dialogButton = JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING", JOptionPane.YES_NO_OPTION);
        if (dialogButton == JOptionPane.YES_OPTION) {
            if (checkEmpty() == true) {
                JOptionPane.showMessageDialog(rootPane, "Please make sure you selected an order!", "Invalid Order ID", JOptionPane.ERROR_MESSAGE);
            } else {
                String vaccineid = txtVaccineID.getText();

                ArrayList<String> tempArray = new ArrayList<>();

                try {
                    try ( FileReader fr = new FileReader("View.txt")) {
                        Scanner sc = new Scanner(fr);
                        String line;
                        String[] lineArr;

                        while ((line = sc.nextLine()) != null) {
                            lineArr = line.split(",");
                            if (!lineArr[0].equals(vaccineid)) {
                                tempArray.add(line);
                            }
                        }
                        fr.close();
                    } catch (Exception e) {
                    }
                } catch (Exception e) {
                }

                try {
                    try ( PrintWriter pr = new PrintWriter("View.txt")) {
                        for (String str : tempArray) {
                            pr.println(str);
                        }
                        JOptionPane.showMessageDialog(rootPane, "Deleted Succesfully");
                        pr.close();
                    } catch (Exception e) {
                    }
                } catch (Exception e) {
                }

                //reset all to default after successful add
                txtVaccineID.setText("");
                cbxVaccineName.setSelectedItem(0);
                cbxVaccinationCenter.setSelectedItem(0);
                txtStock.setText("");
            }
        } else {
            remove(dialogButton);
        }


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (checkEmpty() == true) {
            JOptionPane.showMessageDialog(rootPane, "Please complete all the fields and make sure the data format is correct!", "Incomplete Fields/Data Format", JOptionPane.ERROR_MESSAGE);
        } else {
            String VaccineID = txtVaccineID.getText();
            String name = cbxVaccineName.getSelectedItem().toString();
            String center = cbxVaccinationCenter.getSelectedItem().toString();
            String stock = txtStock.getText();

            ArrayList<String> tempArray = new ArrayList<>();

            try {
                try ( FileReader fr = new FileReader("View.txt")) {
                    Scanner reader = new Scanner(fr);
                    String line;
                    String[] lineArr;

                    while ((line = reader.nextLine()) != null) {
                        lineArr = line.split(",");
                        if (lineArr[0].equals(VaccineID)) {
                            tempArray.add(
                                    lineArr[0] + ","
                                    + name + ","
                                    + center + ","
                                    + stock);
                        } else {
                            tempArray.add(line);
                        }
                    }
                    fr.close();
                } catch (Exception e) {
                }
            } catch (Exception e) {
            }

            try {
                try ( PrintWriter pr = new PrintWriter("View.txt")) {
                    for (String str : tempArray) {
                        pr.println(str);
                    }
                    JOptionPane.showMessageDialog(rootPane, "Updated Succesfully");
                    pr.close();
                } catch (Exception e) {
                }
            } catch (Exception e) {
            }

            //reset all to default after successful update
            txtVaccineID.setText("");
            cbxVaccineName.setSelectedItem(0);
            cbxVaccinationCenter.setSelectedItem(0);
            txtStock.setText("");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        try {
            BufferedReader br = new BufferedReader(new FileReader("View.txt"));
            String s3 = "";
            ArrayList<String> vaccineid = new ArrayList<String>();

            while ((s3 = br.readLine()) != null) {
                String data2[] = new String[10];
                data2 = s3.split(",");
                vaccineid.add(data2[0]);
            }

            String temp = txtVaccineID.getText();
            for (int i = 0; i < vaccineid.size(); i++) {
                if (temp.equals(vaccineid.get(i))) {
                    JOptionPane.showMessageDialog(rootPane, "Vaccine ID existed!", "Order ID Error", JOptionPane.ERROR_MESSAGE);
                    txtVaccineID.setText("");
                    txtStock.setText("");
                    break;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }

        // TODO add your handling code here:
        if (checkEmpty() == true) {
            JOptionPane.showMessageDialog(rootPane, "Please complete all the fields and make sure the data format is correct!", "Incomplete Fields/Data Format", JOptionPane.ERROR_MESSAGE);
        } else {
            View v = new View();
            v.setVaccineID(txtVaccineID.getText());
            v.setVaccineName(cbxVaccineName.getSelectedItem().toString());
            v.setVaccinationCenter(cbxVaccinationCenter.getSelectedItem().toString());
            v.setStock(txtStock.getText());

            try {
                FileWriter file = null;

                file = new FileWriter("View.txt", true);
                PrintWriter pw = new PrintWriter(file);
                pw.print(v.getVaccineID() + ",");
                pw.print(v.getVaccineName() + ",");
                pw.print(v.getVaccinationCenter() + ",");
                pw.print(v.getStock() + "\n");
                file.close();
                pw.close();
                JOptionPane.showMessageDialog(rootPane, "Vaccine has been successfully created!", "Vaccine Create Successful", JOptionPane.INFORMATION_MESSAGE);

                //reset all to default after successful add
                txtVaccineID.setText("");
                cbxVaccineName.setSelectedItem(0);
                cbxVaccinationCenter.setSelectedItem(0);
                txtStock.setText("");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.toString());
            }
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String query = txtSearch.getText();
        filter(query);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void cbxVaccineNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxVaccineNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxVaccineNameActionPerformed

    private void cbxVaccinationCenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxVaccinationCenterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxVaccinationCenterActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        try {
            BufferedReader br = new BufferedReader(new FileReader("Vaccine.txt"));
            String s1 = "";
            ArrayList<String> vacname = new ArrayList<String>();

            while ((s1 = br.readLine()) != null) {
                String data1[] = new String[3];
                data1 = s1.split(",");
                vacname.add(data1[0]);
            }

            for (int i = 0; i < vacname.size(); i++) {
                cbxVaccineName.addItem(vacname.get(i));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }

        try {
            BufferedReader br = new BufferedReader(new FileReader("Center.txt"));
            String s2 = "";
            ArrayList<String> vaccenter = new ArrayList<String>();

            while ((s2 = br.readLine()) != null) {
                String data1[] = new String[3];
                data1 = s2.split(",");
                vaccenter.add(data1[0]);
            }

            for (int i = 0; i < vaccenter.size(); i++) {
                cbxVaccinationCenter.addItem(vaccenter.get(i));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }

        try {
            filename = new FileReader("View.txt");
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "No file found", "Error Loading File", JOptionPane.ERROR);

        }

        //fill table with column name
        String[] columnNames = {"Vaccine ID", "Vaccine Name", "Vaccination Center", "Stock"};
        mymodel = (DefaultTableModel) tblVaccine.getModel();
        mymodel.setColumnIdentifiers(columnNames); //display columnnames on jtable

        mymodel.setRowCount(0);
        tblVaccine.revalidate();

        //read the files after loading 
        BufferedReader br = new BufferedReader(filename);
        Object records[] = br.lines().toArray(); //store each line into array
        //loop through the array to
        for (int index = 0; index < records.length; index++) {
            String eachline = records[index].toString();
            String[] row = eachline.split(",");
            mymodel.addRow(row);
        }
    }//GEN-LAST:event_formWindowActivated

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
        // TODO add your handling code here:
        cbxVaccineName.removeAllItems();
        cbxVaccinationCenter.removeAllItems();
    }//GEN-LAST:event_formWindowDeactivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vaccine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vaccine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vaccine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vaccine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vaccine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbxVaccinationCenter;
    private javax.swing.JComboBox<String> cbxVaccineName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblVaccinationCenter;
    private javax.swing.JLabel lblVaccineID;
    private javax.swing.JLabel lblVaccineName;
    private javax.swing.JTable tblVaccine;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtVaccineID;
    // End of variables declaration//GEN-END:variables
}
